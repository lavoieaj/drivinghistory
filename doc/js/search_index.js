var search_data = {"index":{"searchIndex":["driver","drivinghistory","drivinghistoryapp","testdriver","testdrivinghistory","testtrip","trip","avg_speed()","avg_speed()","discard_trip_outliers()","discard_trip_outliers()","duration()","miles_driven()","new()","new()","new()","parse_command()","report()","setup()","setup()","sort_drivers()","teardown()","teardown()","test_avg_speed()","test_avg_speed()","test_discard_trip_outliers()","test_discard_trip_outliers()","test_driver_trips()","test_duration()","test_init()","test_init()","test_init()","test_miles_driven()","test_parse_command()","test_report()","test_sort_drivers()","test_time_driven()","time_driven()","readme","rakefile","testinput","testinput2","drivinghistory.gemspec"],"longSearchIndex":["driver","drivinghistory","drivinghistoryapp","testdriver","testdrivinghistory","testtrip","trip","driver#avg_speed()","trip#avg_speed()","driver#discard_trip_outliers()","drivinghistory#discard_trip_outliers()","trip#duration()","driver#miles_driven()","driver::new()","drivinghistory::new()","trip::new()","drivinghistory#parse_command()","driver#report()","testdriver#setup()","testtrip#setup()","drivinghistory#sort_drivers()","testdriver#teardown()","testtrip#teardown()","testdriver#test_avg_speed()","testtrip#test_avg_speed()","testdriver#test_discard_trip_outliers()","testdrivinghistory#test_discard_trip_outliers()","testdriver#test_driver_trips()","testtrip#test_duration()","testdriver#test_init()","testdrivinghistory#test_init()","testtrip#test_init()","testdriver#test_miles_driven()","testdrivinghistory#test_parse_command()","testdriver#test_report()","testdrivinghistory#test_sort_drivers()","testdriver#test_time_driven()","driver#time_driven()","","","","",""],"info":[["Driver","","Driver.html","","<p>This class defines Driver objects within the DrivingHistory database\n<p>Each Driver will typically reside …\n"],["DrivingHistory","","DrivingHistory.html","","<p>This class defines DrivingHistory objects\n<p>Each DrivingHistory will typically have many Drivers, and each …\n"],["DrivingHistoryApp","","DrivingHistoryApp.html","","<p>This module defines the primary point of entry for the DrivingHistory\napplication Please refer to the …\n"],["TestDriver","","TestDriver.html","","<p>This class tests functionality of the Driver class and it&#39;s methods\n"],["TestDrivingHistory","","TestDrivingHistory.html","","<p>This class tests functionality of the DrivingHistory class and it&#39;s\nmethods\n"],["TestTrip","","TestTrip.html","","<p>This class tests functionality of the Trip class and it&#39;s methods\n"],["Trip","","Trip.html","","<p>This class defines Trip objects within the DrivingHistory database\n<p>Each Trip will typically belong to …\n"],["avg_speed","Driver","Driver.html#method-i-avg_speed","()","<p>Calculate the average speed of the Driver across all trips\n<p><strong>Returns</strong> :\n<p>the average speed of all trips in …\n"],["avg_speed","Trip","Trip.html#method-i-avg_speed","()","<p>Calculate the average speed of the trip in miles per hour\n<p><strong>Returns</strong> :\n<p>the average speed of the trip in miles …\n"],["discard_trip_outliers","Driver","Driver.html#method-i-discard_trip_outliers","()","<p>Loops through all trips in the trips array and deletes those with a\ncalculated average speed of less …\n"],["discard_trip_outliers","DrivingHistory","DrivingHistory.html#method-i-discard_trip_outliers","()","<p>For all drivers: Loops through all trips in the trips array and  deletes\nthose with a calculated average …\n"],["duration","Trip","Trip.html#method-i-duration","()","<p>Calculate the duration of the trip in minutes\n<p><strong>Returns</strong> :\n<p>the duration of the trip in minutes (e.g. 31.8 …\n"],["miles_driven","Driver","Driver.html#method-i-miles_driven","()","<p>Calculate the total distance driven by the Driver\n<p><strong>Returns</strong> :\n<p>the sum of miles driven in all trips belonging …\n"],["new","Driver","Driver.html#method-c-new","(name)","<p>Create a new Driver\n<p>Note: All arguments must be passed as strings\n<p><strong>Args</strong>    :\n"],["new","DrivingHistory","DrivingHistory.html#method-c-new","()","<p>Create a new DrivingHistory database and initialize an empty Driver array\n"],["new","Trip","Trip.html#method-c-new","(driver, start_time, stop_time, miles_driven)","<p>Create a new Trip\n<p>Note: All arguments must be passed as strings\n<p><strong>Args</strong>    :\n"],["parse_command","DrivingHistory","DrivingHistory.html#method-i-parse_command","(cmd)","<p>Parse a single command. Commands will either define new drivers or define\nnew trips belonging to existing …\n"],["report","Driver","Driver.html#method-i-report","()","<p>Generates a summary of all trips for the Driver\n<p><strong>Returns</strong> :\n<p>a string representing the Driver report (e.g. …\n"],["setup","TestDriver","TestDriver.html#method-i-setup","()","<p>Defines precursor setup for all other Driver tests\n<p><strong>Tasks</strong>    :\n<p>Create a new Driver, named “Alex” …\n"],["setup","TestTrip","TestTrip.html#method-i-setup","()","<p>Defines precursor setup for all other Trip tests\n<p><strong>Tasks</strong>    :\n<p>Create a new Trip, “Alex 12:35 13:36  …\n"],["sort_drivers","DrivingHistory","DrivingHistory.html#method-i-sort_drivers","()","<p>Re-order the list of drivers by the total number of miles driven for each\nDriver from greatest to least. …\n"],["teardown","TestDriver","TestDriver.html#method-i-teardown","()","<p>Post-test method, not required\n"],["teardown","TestTrip","TestTrip.html#method-i-teardown","()","<p>Post-test method, not required\n"],["test_avg_speed","TestDriver","TestDriver.html#method-i-test_avg_speed","()","<p>Tests the Driver avg_speed function\n<p><strong>Assert</strong>    :\n<p>The Driver created during setup has an average speed of …\n"],["test_avg_speed","TestTrip","TestTrip.html#method-i-test_avg_speed","()","<p>Tests the Trip avg_speed function\n<p><strong>Assert</strong>    :\n<p>The Trip avg_speed is 74.2 mph\n"],["test_discard_trip_outliers","TestDriver","TestDriver.html#method-i-test_discard_trip_outliers","()","<p>Tests the Driver discard_trip_outliers function\n<p><strong>Tasks</strong>    :\n<p>Create a new Driver, named “Alex” …\n"],["test_discard_trip_outliers","TestDrivingHistory","TestDrivingHistory.html#method-i-test_discard_trip_outliers","()","<p>Tests the DrvingHistory discard_trip_outliers function\n<p><strong>Tasks</strong>    :\n<p>Create a new DrivingHistory object\n"],["test_driver_trips","TestDriver","TestDriver.html#method-i-test_driver_trips","()","<p>Tests the Driver test_driver_trips function\n<p><strong>Tasks</strong>    :\n<p>Create a new Driver object, named Alex\n"],["test_duration","TestTrip","TestTrip.html#method-i-test_duration","()","<p>Tests the Trip duration function\n<p><strong>Assert</strong>    :\n<p>The Trip duration is 61.0 minutes\n"],["test_init","TestDriver","TestDriver.html#method-i-test_init","()","<p>Tests the Driver initialize function\n<p><strong>Assert</strong>    :\n<p>The Driver created during setup is named “Alex” …\n"],["test_init","TestDrivingHistory","TestDrivingHistory.html#method-i-test_init","()","<p>Tests the DrvingHistory initialize function\n<p><strong>Tasks</strong>    :\n<p>Create a new DrivingHistory object\n"],["test_init","TestTrip","TestTrip.html#method-i-test_init","()","<p>Tests the Trip initialize function\n<p><strong>Assert</strong>    :\n<p>The Trip driver is “Alex”\n"],["test_miles_driven","TestDriver","TestDriver.html#method-i-test_miles_driven","()","<p>Tests the Driver miles_driven function\n<p><strong>Assert</strong>    :\n<p>The Driver created during setup has driven 122 miles …\n"],["test_parse_command","TestDrivingHistory","TestDrivingHistory.html#method-i-test_parse_command","()","<p>Tests the DrvingHistory parse_command function\n<p><strong>Tasks</strong>    :\n<p>Create a new DrivingHistory object\n"],["test_report","TestDriver","TestDriver.html#method-i-test_report","()","<p>Tests the Driver report function\n<p><strong>Assert</strong>    :\n<p>The Driver created during setup generates a report string …\n"],["test_sort_drivers","TestDrivingHistory","TestDrivingHistory.html#method-i-test_sort_drivers","()","<p>Tests the DrvingHistory sort_drivers function\n<p><strong>Tasks</strong>    :\n<p>Create a new DrivingHistory object\n"],["test_time_driven","TestDriver","TestDriver.html#method-i-test_time_driven","()","<p>Tests the Driver time_driven function\n<p><strong>Assert</strong>    :\n<p>The Driver created during setup has driven for 120 minutes …\n"],["time_driven","Driver","Driver.html#method-i-time_driven","()","<p>Calculate the total time driven by the Driver\n<p><strong>Returns</strong> :\n<p>the sum of all times of all trips belonging to …\n"],["README","","README_md.html","","<p>Driving History\n<p>This application is designed to solve the problem given at\ngist.github.com/dan-manges/1e1854d0704cb9132b74 …\n"],["Rakefile","","Rakefile.html","","<p>require &#39;rake/testtask&#39;\n<p>Rake::TestTask.new do |t|\n\n<pre>t.libs &lt;&lt; &quot;tests&quot;\nt.test_files = FileList[&#39;tests/test*.rb&#39;] ...</pre>\n"],["testinput","","data/testinput_txt.html","","<p>Driver Dan Driver Alex Driver Ilya Trip Dan 07:15 07:45 17.3 Trip Dan 06:12\n06:32 12.9 Trip Alex 12:01 …\n"],["testinput2","","data/testinput2_txt.html","","<p>Driver Dan Driver Jamie Driver Alex Driver Bilal Driver Ilya Driver Filip\nTrip Dan 07:15 07:45 17.3  …\n"],["drivinghistory.gemspec","","drivinghistory_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"]]}}